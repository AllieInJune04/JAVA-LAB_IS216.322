/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package baitapthuchanh5_20521086;

import com.microsoft.sqlserver.jdbc.SQLServerStatement;
import com.toedter.calendar.JDateChooser;
import com.toedter.calendar.JTextFieldDateEditor;
import java.awt.Window;
import java.awt.event.KeyEvent;
import java.sql.*;
import java.text.SimpleDateFormat;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.text.SimpleDateFormat;
import javax.swing.DefaultCellEditor;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellEditor;
import javax.swing.table.TableColumn;

/**
 *
 * @author kyanh
 */
public class ThanhToanKhamBenh extends javax.swing.JFrame {

    /**
     * Creates new form ThanhToanKhamBenh
     */
    public ThanhToanKhamBenh() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        chboxThanhToan = new javax.swing.JCheckBox();
        txtMaBN = new javax.swing.JTextField();
        lbYeuCau = new javax.swing.JLabel();
        lbTongTien = new javax.swing.JLabel();
        lbTenBN = new javax.swing.JLabel();
        lbKetLuan = new javax.swing.JLabel();
        dateNgayKham = new com.toedter.calendar.JDateChooser();
        btnThanhToan = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableThuPhiDV = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        chboxThanhToan.setText("Đã thanh toán");

        txtMaBN.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtMaBN.setText("Mã bệnh nhân");
        txtMaBN.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtMaBNKeyPressed(evt);
            }
        });

        lbYeuCau.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lbYeuCau.setText("Yêu cầu");

        lbTongTien.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lbTongTien.setText("Tổng tiền");

        lbTenBN.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lbTenBN.setText("Tên");

        lbKetLuan.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lbKetLuan.setText("Kết luận");

        dateNgayKham.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        btnThanhToan.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnThanhToan.setText("Thanh toán");
        btnThanhToan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThanhToanActionPerformed(evt);
            }
        });

        tableThuPhiDV.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tableThuPhiDV);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtMaBN)
                            .addComponent(lbTenBN, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE)
                            .addComponent(lbKetLuan, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(dateNgayKham, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(lbTongTien, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(lbYeuCau, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 575, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(chboxThanhToan, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap())))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnThanhToan, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtMaBN, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dateNgayKham, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lbTenBN, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(lbKetLuan, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lbYeuCau, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(lbTongTien, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chboxThanhToan)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnThanhToan, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private Boolean KiemTraNgayKham(JDateChooser ngaykham)
    {
        SimpleDateFormat sdf = new SimpleDateFormat("MM/dd/yyyy");
        try{
            String ngkham = sdf.format(ngaykham.getDate());
            return true;
        }catch(Exception ex)
        {
            return false;
        }
    }
    
    private void txtMaBNKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMaBNKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER){
            try{
                Connection conn = SQLConnection.getSQLConnection();
                String SQL = "SELECT TENBN FROM BENHNHAN WHERE MABN = ?";
                PreparedStatement ps = conn.prepareStatement(SQL);
                ps.setString(1,txtMaBN.getText());
                ResultSet rs = ps.executeQuery();

                String ten = null;
                while (rs.next()) {
                        ten = rs.getString(1);
                }
                if (ten == null){
                    JOptionPane.showMessageDialog(this, "Không tìm được tên bệnh nhân với mã '" + txtMaBN.getText()+ "'", "Lỗi", JOptionPane.ERROR_MESSAGE);
                    lbTenBN.setText("");
                    txtMaBN.setText("");
                }
                else
                    lbTenBN.setText(ten);
            }catch(Exception ex) {
                System.out.print("Lỗi lấy tên bệnh nhân" + ex);
            }
        }
    }//GEN-LAST:event_txtMaBNKeyPressed

    private void btnThanhToanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThanhToanActionPerformed
        SimpleDateFormat sdf = new SimpleDateFormat("MM/dd/yyyy");
        String ngkham = sdf.format(dateNgayKham.getDate());
        int makb = LayMaKB(txtMaBN.getText(),ngkham);
        if (makb!=0){
            try{
                    Connection con = SQLConnection.getSQLConnection();
                    String SQL = "UPDATE KHAMBENH SET THANHTOAN = 1 WHERE MAKB = ?";
                    PreparedStatement prestate = con.prepareStatement(SQL);
                    prestate.setInt(1, makb);
                    prestate.executeUpdate();
                    
                JOptionPane.showMessageDialog(this,"Thanh toán thành công"); 
                btnThanhToan.setEnabled(false);
                chboxThanhToan.setSelected(true);
            }
            catch(Exception ex) {
                System.out.print("lỗi tại nút thanh toán"+ex);
            }
        }
    }//GEN-LAST:event_btnThanhToanActionPerformed

    Window window;
    JTextFieldDateEditor dateEditor;
    DefaultTableModel dtmThuPhiDV;
    
    private void TaoBangThuPhiDV()
    {
        dtmThuPhiDV = new DefaultTableModel(){
        @Override
        public boolean isCellEditable(int row, int column) {
           return false;
        }};
        String TieuDe[] ={"Tên dịch vụ","Số lượng","Thành tiền"}; 
        dtmThuPhiDV.setColumnIdentifiers(TieuDe);
        tableThuPhiDV.setModel(dtmThuPhiDV);
        
    }
    
    private void KhoiTaoFrame()
    {
        TaoBangThuPhiDV();
        btnThanhToan.setEnabled(false);
        dateNgayKham.setDateFormatString("dd/MM/yyyy");
        dateEditor = (JTextFieldDateEditor) dateNgayKham.getDateEditor();
        dateEditor.addKeyListener(new KeyListener() {
            @Override
            public void keyPressed(KeyEvent e) {
                    if (e.getKeyCode()==KeyEvent.VK_ENTER){
                        dateNgayKham_ENTER_KEY();
                }
            }

            @Override
            public void keyTyped(KeyEvent e) {
                //throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
            }

            @Override
            public void keyReleased(KeyEvent e) {
                //throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
            }
        });
        
        setVisible(true);
    }
    
    private int LayMaKB(String mabn, String ngaykham){
        try{
            Connection conn = SQLConnection.getSQLConnection();
            String SQL = "SELECT MAKB FROM KHAMBENH WHERE MABN = ? AND NGAYKHAM=?";
            PreparedStatement ps = conn.prepareStatement(SQL);
            ps.setString(1,mabn);
            ps.setString(2,ngaykham);
            ResultSet rs = ps.executeQuery();
                
            int makb = 0;
            while (rs.next()) {
                    makb = rs.getInt(1);
            }
            return makb;
        }
            catch(Exception ex) {
                System.out.print("lỗi tại lấy mã khám bệnh "+ex);
                return 0;
            }
    }
     
    private int LayTongTienDV(int makb)
    {
        int tongtien=0;
        try{
            Connection conn = SQLConnection.getSQLConnection();
            String SQL = "SELECT THANHTIEN FROM THUPHI WHERE MAKB=?";
            PreparedStatement ps = conn.prepareStatement(SQL);
            ps.setInt(1,makb);
            ResultSet rs = ps.executeQuery();
           // String ten = null;
            while (rs.next()) {
                tongtien = tongtien + rs.getInt(1);
            }
            return tongtien;
        }catch(Exception ex){
            System.out.print("Lỗi tại lấy thông tin thu phí "+ex);
            return 0;
        }
    }
    
    private String LayTenDV(int madv)
    {
        try{
            Connection con = null;
            con = SQLConnection.getSQLConnection();
            String SQL = "SELECT TENDV FROM DICHVU WHERE MADV =?";
            PreparedStatement State = con.prepareStatement(SQL); 
            State.setInt(1, madv);
            ResultSet rs = State.executeQuery();   
            
            String tendv = null;
            while (rs.next()) {
                    tendv = rs.getString(1);
            }
            return tendv;
        }catch(Exception ex){
            System.out.print("Lỗi tại lấy mã dịch vụ");
            return null;
        }
    }
    
    private void LayThongTinThuPhi(int makb){
        try{
                Connection con = null;
                con = SQLConnection.getSQLConnection();
                String dv[] = new String[3];
                String SQL = "SELECT MADV,SOLUONG,THANHTIEN FROM THUPHI WHERE MAKB=? ";
                PreparedStatement ps = con.prepareStatement(SQL);
                ps.setInt(1,makb);
                ResultSet rs = ps.executeQuery();
                while (rs.next()) {
                    int madv = rs.getInt(1);
                    dv[0]=LayTenDV(madv);
                    dv[1]=rs.getString(2);
                    dv[2]=rs.getString(3);
                    dtmThuPhiDV.addRow(dv);
                }
            }catch(Exception ex){
                System.out.print("Lỗi tại lấy thông tin thu phí "+ex);
            }
    }
    
    private void dateNgayKham_ENTER_KEY()
    {
        dtmThuPhiDV.setRowCount(0);
        int thanhtoan;
        if (KiemTraNgayKham(dateNgayKham) == false)
        {
                JOptionPane.showMessageDialog(window,"Chưa nhập ngày khám bệnh hoặc ngày khám bệnh không đúng định dạng dd/mm/yyyy","Lỗi",JOptionPane.ERROR_MESSAGE);
                return;
        }
        SimpleDateFormat sdf = new SimpleDateFormat("MM/dd/yyyy");
        String ngkham = sdf.format(dateNgayKham.getDate());
        int makb = LayMaKB(txtMaBN.getText(),ngkham);
        if (makb==0)
        {
                JOptionPane.showMessageDialog(window,"Không tìm thấy thông tin khám bệnh!","Lỗi",JOptionPane.ERROR_MESSAGE);
                return;
        }
        try{
            Connection conn = SQLConnection.getSQLConnection();
            String SQL = "SELECT YEUCAUKHAM, KETLUAN, THANHTOAN FROM KHAMBENH"
                    + " WHERE MAKB=?";
            PreparedStatement ps = conn.prepareStatement(SQL);
            ps.setInt(1,makb);
            ResultSet rs = ps.executeQuery();
           // String ten = null;
            while (rs.next()) {
                //lbYeuCau.setText(rs.getString(2));
                //ten = LayTenBN(rs.getString(1));
                //cboxTenBN.addItem(ten);
                lbYeuCau.setText(rs.getString(1));
                lbKetLuan.setText(rs.getString(2));
                thanhtoan=rs.getInt(3);
                if (thanhtoan == 0){
                    chboxThanhToan.setSelected(false);
                    btnThanhToan.setEnabled(true);
                }
                else{
                    chboxThanhToan.setSelected(true);
                    btnThanhToan.setEnabled(false);
                }
            }
            int tongtien = LayTongTienDV(makb);
            
            if (tongtien!=0)
                lbTongTien.setText(Integer.toString(tongtien));
        }catch(Exception ex){
            System.out.print("Lỗi tại lấy thông tin khám bệnh "+ex);
        }
        
        LayThongTinThuPhi(makb);
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ThanhToanKhamBenh.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ThanhToanKhamBenh.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ThanhToanKhamBenh.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ThanhToanKhamBenh.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ThanhToanKhamBenh().KhoiTaoFrame();
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnThanhToan;
    private javax.swing.JCheckBox chboxThanhToan;
    private com.toedter.calendar.JDateChooser dateNgayKham;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbKetLuan;
    private javax.swing.JLabel lbTenBN;
    private javax.swing.JLabel lbTongTien;
    private javax.swing.JLabel lbYeuCau;
    private javax.swing.JTable tableThuPhiDV;
    private javax.swing.JTextField txtMaBN;
    // End of variables declaration//GEN-END:variables
}
